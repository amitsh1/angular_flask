# name: Python application

# on: [push]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v1
#     - name: Set up Python 3.7
#       uses: actions/setup-python@v1
#       with:
#         python-version: 3.7
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#     - name: Lint with flake8
#       run: |
#         pip install flake8
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pip install pytest
#         pytest



name: build puppeteer

on:
  push:
    branches: master

# on:
#   paths:
#     - './dockerfiles/Dockerfile.puppeteer  '

# jobs:
#   login:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Image digest
#         run: echo ${{ secrets.CR_PAT }}
#       -        
#         name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.CR_PAT }}
#       -
#         name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           file: ./dockerfiles/Dockerfile.puppeteer          
#           push: true
#           tags: amitshalev/puppeteer:latest
#       -
#         name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}          
      

jobs:
  build:
    runs-on: ubuntu-latest   
    steps:     
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfiles/Dockerfile.puppeteer  
          tags: ${{ github.repository_owner }}//flask_angular:latest
          push: true        